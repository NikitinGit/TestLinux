server.port=6300
spring.application.name=TestLinux


# Whether response compression is enabled.
server.compression.enabled=true

# Comma-separated list of MIME types that should be compressed.
# server.compression.mime-types=text/html, text/xml, text/plain, text/css, text/javascript, application/javascript, application/json, application/xml

# Minimum "Content-Length" value that is required for compression to be performed.
server.compression.min-response-size


# Whether to enable HTTP/2 support, if the current environment supports it.
server.http2.enabled=true

spring.servlet.multipart.max-file-size=100MB

spring.servlet.multipart.max-request-size=100MB


# Delay between the invocation of backgroundProcess methods. If a duration suffix is not specified, seconds will be used.
server.tomcat.background-processor-delay=30s

# character encoding to use for URL decoding
server.tomcat.uri-encoding=UTF-8 

# Maximum size of the form content in any HTTP post request.
server.tomcat.max-http-form-post-size=100MB

# Maximum amount of request body to swallow.
server.tomcat.max-swallow-size=100MB

# Maximum amount of worker threads. Doesn't have an effect if virtual threads are enabled.
server.tomcat.threads.max=200

# Maximum capacity of the thread pool's backing queue.
#server.tomcat.threads.max-queue-capacity=2147483647

# Minimum amount of worker threads. Doesn't have an effect if virtual threads are enabled.
server.tomcat.threads.min-spare=10

# Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=1000

# Amount of time the connector will wait, after accepting a connection, for the request URI line to be presented.
# server.tomcat.connection-timeout

# Time to wait for another HTTP request before the connection is closed.
# When not set the connectionTimeout is used. When set to -1 there will be no timeout.
# server.tomcat.keep-alive-timeout

# Maximum number of connections that the server accepts and processes at any given time.
# Once the limit has been reached, the operating system may still accept connections based on the "acceptCount" property.
server.tomcat.max-connections=32768

# Maximum number of HTTP requests that can be pipelined before the connection is closed.
# When set to 0 or 1, keep-alive and pipelining are disabled.
# When set to -1, an unlimited number of pipelined or keep-alive requests are allowed.
server.tomcat.max-keep-alive-requests=1000

# Maximum number of idle processors that will be retained in the cache and reused with a subsequent request.
# When set to -1 the cache will be unlimited with a theoretical maximum size equal to the maximum number of connections.
server.tomcat.processor-cache=200


# IGOR
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/test_sortition
spring.datasource.username=nikitin
spring.datasource.password=123456789


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=500
#spring.jpa.hibernate.session.events.log=false

spring.jpa.properties.hibernate.query.jpaql_strict_compliance=true
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.jpa.properties.hibernate.generate_statistics=true

#OFF|INFO
logging.level.org.hibernate.engine.internal.StatisticalLoggingSessionEventListener=INFO

logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type=TRACE
logging.level.org.hibernate.stat=debug
logging.level.org.hibernate.type.descriptor.sql=INFO

spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.time-between-eviction-runs-millis=3600000
spring.datasource.validationQuery = SELECT 1

spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

spring.security.user.name=admin
spring.security.user.password=admin


#spring.boot.admin.ui.title=My Admin Console
#spring.boot.admin.context-path=/admin
#spring.boot.admin.client.url=http://localhost:6400
#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always


app.photo.path.events=/User/
app.document.path.events=/User/

# app.photo.path.events=/var/www/strikerstat_images/
# app.document.path.events=/var/www/strikerstat_documents/

#app.document.path.events=/var/www/strikerstat_files/


# S3
#app.s3.shorts-temp-dir=/Users/astobbe/dev/strikerstat-backend-spring/temp_videos/
app.s3.shorts-temp-dir=/var/www/strikerstat_shorts/
app.s3.url=https://s3.timeweb.cloud
app.s3.region=ru-1
app.s3.access-key=N880Q3B5F5CKBLH2WXK3
app.s3.secret-key=RLApsVe484vCYDTiezoyZQS1nYEtctRNeKpkpwa1
app.s3.bucket-name=38a765bf-d92869b2-1290-4b38-afb5-870bdae4522b


# Slug-Service
app.slug-service.url=https://api.strikerstat-stage.ru/api/slug


# HTTPS/SSL
#server.ssl.enabled=false

#server.ssl.key-store=/etc/letsencrypt/live/keystore.p12
#server.ssl.key-store-password=WgEro!tkjh47
#server.ssl.keyStoreType=PKCS12
#server.ssl.keyAlias=tomcat

#server.ssl.certificate=/etc/letsencrypt/live/strikerstat.com/fullchain.pem
#server.ssl.certificate-private-key=/etc/letsencrypt/live/strikerstat.com/privkey.pem

cors.allowed.origins=http://localhost:3000

#logging.level.org.springframework.security.web.FilterChainProxy=DEBUG
logging.level.org.springframework.web.cors=DEBUG